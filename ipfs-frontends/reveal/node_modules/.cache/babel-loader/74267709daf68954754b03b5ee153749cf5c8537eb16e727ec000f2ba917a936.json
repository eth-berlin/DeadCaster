{"ast":null,"code":"import { Token, Type } from './token.js';\nimport { decodeErrPrefix, assertEnoughData } from './common.js';\nexport const uintBoundaries = [24, 256, 65536, 4294967296, BigInt('18446744073709551616')];\nexport function readUint8(data, offset, options) {\n  assertEnoughData(data, offset, 1);\n  const value = data[offset];\n  if (options.strict === true && value < uintBoundaries[0]) {\n    throw new Error(`${decodeErrPrefix} integer encoded in more bytes than necessary (strict decode)`);\n  }\n  return value;\n}\nexport function readUint16(data, offset, options) {\n  assertEnoughData(data, offset, 2);\n  const value = data[offset] << 8 | data[offset + 1];\n  if (options.strict === true && value < uintBoundaries[1]) {\n    throw new Error(`${decodeErrPrefix} integer encoded in more bytes than necessary (strict decode)`);\n  }\n  return value;\n}\nexport function readUint32(data, offset, options) {\n  assertEnoughData(data, offset, 4);\n  const value = data[offset] * 16777216 + (data[offset + 1] << 16) + (data[offset + 2] << 8) + data[offset + 3];\n  if (options.strict === true && value < uintBoundaries[2]) {\n    throw new Error(`${decodeErrPrefix} integer encoded in more bytes than necessary (strict decode)`);\n  }\n  return value;\n}\nexport function readUint64(data, offset, options) {\n  assertEnoughData(data, offset, 8);\n  const hi = data[offset] * 16777216 + (data[offset + 1] << 16) + (data[offset + 2] << 8) + data[offset + 3];\n  const lo = data[offset + 4] * 16777216 + (data[offset + 5] << 16) + (data[offset + 6] << 8) + data[offset + 7];\n  const value = (BigInt(hi) << BigInt(32)) + BigInt(lo);\n  if (options.strict === true && value < uintBoundaries[3]) {\n    throw new Error(`${decodeErrPrefix} integer encoded in more bytes than necessary (strict decode)`);\n  }\n  if (value <= Number.MAX_SAFE_INTEGER) {\n    return Number(value);\n  }\n  if (options.allowBigInt === true) {\n    return value;\n  }\n  throw new Error(`${decodeErrPrefix} integers outside of the safe integer range are not supported`);\n}\nexport function decodeUint8(data, pos, _minor, options) {\n  return new Token(Type.uint, readUint8(data, pos + 1, options), 2);\n}\nexport function decodeUint16(data, pos, _minor, options) {\n  return new Token(Type.uint, readUint16(data, pos + 1, options), 3);\n}\nexport function decodeUint32(data, pos, _minor, options) {\n  return new Token(Type.uint, readUint32(data, pos + 1, options), 5);\n}\nexport function decodeUint64(data, pos, _minor, options) {\n  return new Token(Type.uint, readUint64(data, pos + 1, options), 9);\n}\nexport function encodeUint(buf, token) {\n  return encodeUintValue(buf, 0, token.value);\n}\nexport function encodeUintValue(buf, major, uint) {\n  if (uint < uintBoundaries[0]) {\n    const nuint = Number(uint);\n    buf.push([major | nuint]);\n  } else if (uint < uintBoundaries[1]) {\n    const nuint = Number(uint);\n    buf.push([major | 24, nuint]);\n  } else if (uint < uintBoundaries[2]) {\n    const nuint = Number(uint);\n    buf.push([major | 25, nuint >>> 8, nuint & 255]);\n  } else if (uint < uintBoundaries[3]) {\n    const nuint = Number(uint);\n    buf.push([major | 26, nuint >>> 24 & 255, nuint >>> 16 & 255, nuint >>> 8 & 255, nuint & 255]);\n  } else {\n    const buint = BigInt(uint);\n    if (buint < uintBoundaries[4]) {\n      const set = [major | 27, 0, 0, 0, 0, 0, 0, 0];\n      let lo = Number(buint & BigInt(4294967295));\n      let hi = Number(buint >> BigInt(32) & BigInt(4294967295));\n      set[8] = lo & 255;\n      lo = lo >> 8;\n      set[7] = lo & 255;\n      lo = lo >> 8;\n      set[6] = lo & 255;\n      lo = lo >> 8;\n      set[5] = lo & 255;\n      set[4] = hi & 255;\n      hi = hi >> 8;\n      set[3] = hi & 255;\n      hi = hi >> 8;\n      set[2] = hi & 255;\n      hi = hi >> 8;\n      set[1] = hi & 255;\n      buf.push(set);\n    } else {\n      throw new Error(`${decodeErrPrefix} encountered BigInt larger than allowable range`);\n    }\n  }\n}\nencodeUint.encodedSize = function encodedSize(token) {\n  return encodeUintValue.encodedSize(token.value);\n};\nencodeUintValue.encodedSize = function encodedSize(uint) {\n  if (uint < uintBoundaries[0]) {\n    return 1;\n  }\n  if (uint < uintBoundaries[1]) {\n    return 2;\n  }\n  if (uint < uintBoundaries[2]) {\n    return 3;\n  }\n  if (uint < uintBoundaries[3]) {\n    return 5;\n  }\n  return 9;\n};\nencodeUint.compareTokens = function compareTokens(tok1, tok2) {\n  return tok1.value < tok2.value ? -1 : tok1.value > tok2.value ? 1 : 0;\n};","map":{"version":3,"names":["Token","Type","decodeErrPrefix","assertEnoughData","uintBoundaries","BigInt","readUint8","data","offset","options","value","strict","Error","readUint16","readUint32","readUint64","hi","lo","Number","MAX_SAFE_INTEGER","allowBigInt","decodeUint8","pos","_minor","uint","decodeUint16","decodeUint32","decodeUint64","encodeUint","buf","token","encodeUintValue","major","nuint","push","buint","set","encodedSize","compareTokens","tok1","tok2"],"sources":["/Users/flo/DeadCaster/ipfs-frontends/onboard/node_modules/cborg/esm/lib/0uint.js"],"sourcesContent":["import {\n  Token,\n  Type\n} from './token.js';\nimport {\n  decodeErrPrefix,\n  assertEnoughData\n} from './common.js';\nexport const uintBoundaries = [\n  24,\n  256,\n  65536,\n  4294967296,\n  BigInt('18446744073709551616')\n];\nexport function readUint8(data, offset, options) {\n  assertEnoughData(data, offset, 1);\n  const value = data[offset];\n  if (options.strict === true && value < uintBoundaries[0]) {\n    throw new Error(`${ decodeErrPrefix } integer encoded in more bytes than necessary (strict decode)`);\n  }\n  return value;\n}\nexport function readUint16(data, offset, options) {\n  assertEnoughData(data, offset, 2);\n  const value = data[offset] << 8 | data[offset + 1];\n  if (options.strict === true && value < uintBoundaries[1]) {\n    throw new Error(`${ decodeErrPrefix } integer encoded in more bytes than necessary (strict decode)`);\n  }\n  return value;\n}\nexport function readUint32(data, offset, options) {\n  assertEnoughData(data, offset, 4);\n  const value = data[offset] * 16777216 + (data[offset + 1] << 16) + (data[offset + 2] << 8) + data[offset + 3];\n  if (options.strict === true && value < uintBoundaries[2]) {\n    throw new Error(`${ decodeErrPrefix } integer encoded in more bytes than necessary (strict decode)`);\n  }\n  return value;\n}\nexport function readUint64(data, offset, options) {\n  assertEnoughData(data, offset, 8);\n  const hi = data[offset] * 16777216 + (data[offset + 1] << 16) + (data[offset + 2] << 8) + data[offset + 3];\n  const lo = data[offset + 4] * 16777216 + (data[offset + 5] << 16) + (data[offset + 6] << 8) + data[offset + 7];\n  const value = (BigInt(hi) << BigInt(32)) + BigInt(lo);\n  if (options.strict === true && value < uintBoundaries[3]) {\n    throw new Error(`${ decodeErrPrefix } integer encoded in more bytes than necessary (strict decode)`);\n  }\n  if (value <= Number.MAX_SAFE_INTEGER) {\n    return Number(value);\n  }\n  if (options.allowBigInt === true) {\n    return value;\n  }\n  throw new Error(`${ decodeErrPrefix } integers outside of the safe integer range are not supported`);\n}\nexport function decodeUint8(data, pos, _minor, options) {\n  return new Token(Type.uint, readUint8(data, pos + 1, options), 2);\n}\nexport function decodeUint16(data, pos, _minor, options) {\n  return new Token(Type.uint, readUint16(data, pos + 1, options), 3);\n}\nexport function decodeUint32(data, pos, _minor, options) {\n  return new Token(Type.uint, readUint32(data, pos + 1, options), 5);\n}\nexport function decodeUint64(data, pos, _minor, options) {\n  return new Token(Type.uint, readUint64(data, pos + 1, options), 9);\n}\nexport function encodeUint(buf, token) {\n  return encodeUintValue(buf, 0, token.value);\n}\nexport function encodeUintValue(buf, major, uint) {\n  if (uint < uintBoundaries[0]) {\n    const nuint = Number(uint);\n    buf.push([major | nuint]);\n  } else if (uint < uintBoundaries[1]) {\n    const nuint = Number(uint);\n    buf.push([\n      major | 24,\n      nuint\n    ]);\n  } else if (uint < uintBoundaries[2]) {\n    const nuint = Number(uint);\n    buf.push([\n      major | 25,\n      nuint >>> 8,\n      nuint & 255\n    ]);\n  } else if (uint < uintBoundaries[3]) {\n    const nuint = Number(uint);\n    buf.push([\n      major | 26,\n      nuint >>> 24 & 255,\n      nuint >>> 16 & 255,\n      nuint >>> 8 & 255,\n      nuint & 255\n    ]);\n  } else {\n    const buint = BigInt(uint);\n    if (buint < uintBoundaries[4]) {\n      const set = [\n        major | 27,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0\n      ];\n      let lo = Number(buint & BigInt(4294967295));\n      let hi = Number(buint >> BigInt(32) & BigInt(4294967295));\n      set[8] = lo & 255;\n      lo = lo >> 8;\n      set[7] = lo & 255;\n      lo = lo >> 8;\n      set[6] = lo & 255;\n      lo = lo >> 8;\n      set[5] = lo & 255;\n      set[4] = hi & 255;\n      hi = hi >> 8;\n      set[3] = hi & 255;\n      hi = hi >> 8;\n      set[2] = hi & 255;\n      hi = hi >> 8;\n      set[1] = hi & 255;\n      buf.push(set);\n    } else {\n      throw new Error(`${ decodeErrPrefix } encountered BigInt larger than allowable range`);\n    }\n  }\n}\nencodeUint.encodedSize = function encodedSize(token) {\n  return encodeUintValue.encodedSize(token.value);\n};\nencodeUintValue.encodedSize = function encodedSize(uint) {\n  if (uint < uintBoundaries[0]) {\n    return 1;\n  }\n  if (uint < uintBoundaries[1]) {\n    return 2;\n  }\n  if (uint < uintBoundaries[2]) {\n    return 3;\n  }\n  if (uint < uintBoundaries[3]) {\n    return 5;\n  }\n  return 9;\n};\nencodeUint.compareTokens = function compareTokens(tok1, tok2) {\n  return tok1.value < tok2.value ? -1 : tok1.value > tok2.value ? 1 : 0;\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}