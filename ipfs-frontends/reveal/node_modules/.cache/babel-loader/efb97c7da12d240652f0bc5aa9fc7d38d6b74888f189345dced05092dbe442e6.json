{"ast":null,"code":"var _jsxFileName = \"/Users/flo/DeadCaster/ipfs-frontends/onboard/src/App.js\";\nimport React from 'react';\nimport { ethers } from 'ethers';\nimport './App.css';\nimport * as sapphire from '@oasisprotocol/sapphire-paratime';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  const requestAccount = async () => {\n    await window.ethereum.request({\n      method: 'eth_requestAccounts'\n    });\n  };\n  const contractAddress = '0x49C9370e6152F312aefEA19D55AE89f11ca30cf4';\n  const urlParams = new URLSearchParams(window.location.search);\n  const value = urlParams.get('value');\n  const calldata = urlParams.get('calldata');\n  const sendTransaction = async () => {\n    if (typeof window.ethereum !== 'undefined') {\n      await window.ethereum.request({\n        method: \"wallet_addEthereumChain\",\n        params: [{\n          chainId: \"0x5aff\",\n          rpcUrls: [\"https://testnet.sapphire.oasis.io\"],\n          chainName: \"Oasis Testnet\",\n          nativeCurrency: {\n            name: \"TEST\",\n            symbol: \"TEST\",\n            decimals: 18\n          },\n          blockExplorerUrls: [\"https://explorer.oasis.io/testnet/sapphire\"]\n        }]\n      });\n      await requestAccount();\n\n      // const provider = new ethers.BrowserProvider(window.ethereum);\n      // const signer = provider.getSigner();\n\n      // const EncryptedSigner = sapphire.wrap(\n      //   signer,\n      // );\n\n      const signer = sapphire.wrap(new ethers.providers.Web3Provider(window.ethereum).getSigner());\n      console.log(signer);\n      const transaction = {\n        to: contractAddress,\n        value: ethers.parseEther(value),\n        data: calldata\n      };\n      let unsignedTx = signer.populateTransaction(transaction);\n      signer.sendTransaction(unsignedTx);\n    } else {\n      console.log('Ethereum wallet not detected');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"DeadCaster\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendTransaction,\n        children: \"Create secret & activate switch\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","ethers","sapphire","jsxDEV","_jsxDEV","App","requestAccount","window","ethereum","request","method","contractAddress","urlParams","URLSearchParams","location","search","value","get","calldata","sendTransaction","params","chainId","rpcUrls","chainName","nativeCurrency","name","symbol","decimals","blockExplorerUrls","signer","wrap","providers","Web3Provider","getSigner","console","log","transaction","to","parseEther","data","unsignedTx","populateTransaction","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/flo/DeadCaster/ipfs-frontends/onboard/src/App.js"],"sourcesContent":["import React from 'react';\nimport { ethers } from 'ethers';\nimport './App.css';\nimport * as sapphire from '@oasisprotocol/sapphire-paratime';\n\n\nfunction App() {\n  const requestAccount = async () => {\n    await window.ethereum.request({ method: 'eth_requestAccounts' });\n  };\n\n  const contractAddress = '0x49C9370e6152F312aefEA19D55AE89f11ca30cf4';\n\n  const urlParams = new URLSearchParams(window.location.search);\n  const value = urlParams.get('value');\n  const calldata = urlParams.get('calldata');\n\n\n\n  const sendTransaction = async () => {\n    if (typeof window.ethereum !== 'undefined') {\n\n      await window.ethereum.request({\n        method: \"wallet_addEthereumChain\",\n        params: [{\n          chainId: \"0x5aff\",\n          rpcUrls: [\"https://testnet.sapphire.oasis.io\"],\n          chainName: \"Oasis Testnet\",\n          nativeCurrency: {\n            name: \"TEST\",\n            symbol: \"TEST\",\n            decimals: 18\n          },\n          blockExplorerUrls: [\"https://explorer.oasis.io/testnet/sapphire\"]\n        }]\n      });\n\n      await requestAccount();\n\n      // const provider = new ethers.BrowserProvider(window.ethereum);\n      // const signer = provider.getSigner();\n\n      // const EncryptedSigner = sapphire.wrap(\n      //   signer,\n      // );\n\n      const signer = sapphire.wrap(\n        new ethers.providers.Web3Provider(window.ethereum).getSigner(),\n      );\n\n\n      console.log(signer);\n\n      const transaction = {\n        to: contractAddress,\n        value: ethers.parseEther(value),\n        data: calldata,\n      };\n      let unsignedTx = signer.populateTransaction(transaction);\n      signer.sendTransaction(unsignedTx);\n    } else {\n      console.log('Ethereum wallet not detected');\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>DeadCaster</h1>\n        <button onClick={sendTransaction}>Create secret & activate switch</button>\n      </header>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,QAAQ,QAAQ;AAC/B,OAAO,WAAW;AAClB,OAAO,KAAKC,QAAQ,MAAM,kCAAkC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG7D,SAASC,GAAGA,CAAA,EAAG;EACb,MAAMC,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjC,MAAMC,MAAM,CAACC,QAAQ,CAACC,OAAO,CAAC;MAAEC,MAAM,EAAE;IAAsB,CAAC,CAAC;EAClE,CAAC;EAED,MAAMC,eAAe,GAAG,4CAA4C;EAEpE,MAAMC,SAAS,GAAG,IAAIC,eAAe,CAACN,MAAM,CAACO,QAAQ,CAACC,MAAM,CAAC;EAC7D,MAAMC,KAAK,GAAGJ,SAAS,CAACK,GAAG,CAAC,OAAO,CAAC;EACpC,MAAMC,QAAQ,GAAGN,SAAS,CAACK,GAAG,CAAC,UAAU,CAAC;EAI1C,MAAME,eAAe,GAAG,MAAAA,CAAA,KAAY;IAClC,IAAI,OAAOZ,MAAM,CAACC,QAAQ,KAAK,WAAW,EAAE;MAE1C,MAAMD,MAAM,CAACC,QAAQ,CAACC,OAAO,CAAC;QAC5BC,MAAM,EAAE,yBAAyB;QACjCU,MAAM,EAAE,CAAC;UACPC,OAAO,EAAE,QAAQ;UACjBC,OAAO,EAAE,CAAC,mCAAmC,CAAC;UAC9CC,SAAS,EAAE,eAAe;UAC1BC,cAAc,EAAE;YACdC,IAAI,EAAE,MAAM;YACZC,MAAM,EAAE,MAAM;YACdC,QAAQ,EAAE;UACZ,CAAC;UACDC,iBAAiB,EAAE,CAAC,4CAA4C;QAClE,CAAC;MACH,CAAC,CAAC;MAEF,MAAMtB,cAAc,CAAC,CAAC;;MAEtB;MACA;;MAEA;MACA;MACA;;MAEA,MAAMuB,MAAM,GAAG3B,QAAQ,CAAC4B,IAAI,CAC1B,IAAI7B,MAAM,CAAC8B,SAAS,CAACC,YAAY,CAACzB,MAAM,CAACC,QAAQ,CAAC,CAACyB,SAAS,CAAC,CAC/D,CAAC;MAGDC,OAAO,CAACC,GAAG,CAACN,MAAM,CAAC;MAEnB,MAAMO,WAAW,GAAG;QAClBC,EAAE,EAAE1B,eAAe;QACnBK,KAAK,EAAEf,MAAM,CAACqC,UAAU,CAACtB,KAAK,CAAC;QAC/BuB,IAAI,EAAErB;MACR,CAAC;MACD,IAAIsB,UAAU,GAAGX,MAAM,CAACY,mBAAmB,CAACL,WAAW,CAAC;MACxDP,MAAM,CAACV,eAAe,CAACqB,UAAU,CAAC;IACpC,CAAC,MAAM;MACLN,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAC;IAC7C;EACF,CAAC;EAED,oBACE/B,OAAA;IAAKsC,SAAS,EAAC,KAAK;IAAAC,QAAA,eAClBvC,OAAA;MAAQsC,SAAS,EAAC,YAAY;MAAAC,QAAA,gBAC5BvC,OAAA;QAAAuC,QAAA,EAAI;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACnB3C,OAAA;QAAQ4C,OAAO,EAAE7B,eAAgB;QAAAwB,QAAA,EAAC;MAA+B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAACE,EAAA,GAnEQ5C,GAAG;AAqEZ,eAAeA,GAAG;AAAC,IAAA4C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}