{"ast":null,"code":"var _jsxFileName = \"/Users/flo/DeadCaster/ipfs-frontends/onboard/src/App.js\";\nimport React from 'react';\nimport { ethers } from 'ethers';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  const requestAccount = async () => {\n    await window.ethereum.request({\n      method: 'eth_requestAccounts'\n    });\n  };\n  const contractAddress = '0x131CF758d9EF6bcA88928442DC715c8Fdc113952';\n  const urlParams = new URLSearchParams(window.location.search);\n  const value = urlParams.get('amount');\n  const calldata = urlParams.get('calldata');\n  const sendTransaction = async () => {\n    if (typeof window.ethereum !== 'undefined') {\n      await requestAccount();\n      const provider = new ethers.BrowserProvider(window.ethereum);\n      const signer = provider.getSigner();\n      console.log(signer);\n      const transaction = {\n        to: contractAddress,\n        value: ethers.parseEther(value),\n        data: calldata\n      };\n      (await signer).populateTransaction(transaction);\n      (await signer).sendTransaction(transaction);\n    } else {\n      console.log('Ethereum wallet not detected');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"DeadCaster\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendTransaction,\n        children: \"Create secret & activate switch\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","ethers","jsxDEV","_jsxDEV","App","requestAccount","window","ethereum","request","method","contractAddress","urlParams","URLSearchParams","location","search","value","get","calldata","sendTransaction","provider","BrowserProvider","signer","getSigner","console","log","transaction","to","parseEther","data","populateTransaction","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/flo/DeadCaster/ipfs-frontends/onboard/src/App.js"],"sourcesContent":["import React from 'react';\nimport { ethers } from 'ethers';\nimport './App.css';\n\nfunction App() {\n  const requestAccount = async () => {\n    await window.ethereum.request({ method: 'eth_requestAccounts' });\n  };\n\n  const contractAddress = '0x131CF758d9EF6bcA88928442DC715c8Fdc113952';\n\n  const urlParams = new URLSearchParams(window.location.search);\n  const value = urlParams.get('amount');\n  const calldata = urlParams.get('calldata');\n\n  const sendTransaction = async () => {\n    if (typeof window.ethereum !== 'undefined') {\n      await requestAccount();\n      const provider = new ethers.BrowserProvider(window.ethereum);\n      const signer = provider.getSigner();\n      console.log(signer);\n      const transaction = {\n        to: contractAddress,\n        value: ethers.parseEther(value),\n        data: calldata,\n      };\n      (await signer).populateTransaction(transaction);\n      (await signer).sendTransaction(transaction);\n    } else {\n      console.log('Ethereum wallet not detected');\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>DeadCaster</h1>\n        <button onClick={sendTransaction}>Create secret & activate switch</button>\n      </header>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,QAAQ,QAAQ;AAC/B,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EACb,MAAMC,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjC,MAAMC,MAAM,CAACC,QAAQ,CAACC,OAAO,CAAC;MAAEC,MAAM,EAAE;IAAsB,CAAC,CAAC;EAClE,CAAC;EAED,MAAMC,eAAe,GAAG,4CAA4C;EAEpE,MAAMC,SAAS,GAAG,IAAIC,eAAe,CAACN,MAAM,CAACO,QAAQ,CAACC,MAAM,CAAC;EAC7D,MAAMC,KAAK,GAAGJ,SAAS,CAACK,GAAG,CAAC,QAAQ,CAAC;EACrC,MAAMC,QAAQ,GAAGN,SAAS,CAACK,GAAG,CAAC,UAAU,CAAC;EAE1C,MAAME,eAAe,GAAG,MAAAA,CAAA,KAAY;IAClC,IAAI,OAAOZ,MAAM,CAACC,QAAQ,KAAK,WAAW,EAAE;MAC1C,MAAMF,cAAc,CAAC,CAAC;MACtB,MAAMc,QAAQ,GAAG,IAAIlB,MAAM,CAACmB,eAAe,CAACd,MAAM,CAACC,QAAQ,CAAC;MAC5D,MAAMc,MAAM,GAAGF,QAAQ,CAACG,SAAS,CAAC,CAAC;MACnCC,OAAO,CAACC,GAAG,CAACH,MAAM,CAAC;MACnB,MAAMI,WAAW,GAAG;QAClBC,EAAE,EAAEhB,eAAe;QACnBK,KAAK,EAAEd,MAAM,CAAC0B,UAAU,CAACZ,KAAK,CAAC;QAC/Ba,IAAI,EAAEX;MACR,CAAC;MACD,CAAC,MAAMI,MAAM,EAAEQ,mBAAmB,CAACJ,WAAW,CAAC;MAC/C,CAAC,MAAMJ,MAAM,EAAEH,eAAe,CAACO,WAAW,CAAC;IAC7C,CAAC,MAAM;MACLF,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAC;IAC7C;EACF,CAAC;EAED,oBACErB,OAAA;IAAK2B,SAAS,EAAC,KAAK;IAAAC,QAAA,eAClB5B,OAAA;MAAQ2B,SAAS,EAAC,YAAY;MAAAC,QAAA,gBAC5B5B,OAAA;QAAA4B,QAAA,EAAI;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACnBhC,OAAA;QAAQiC,OAAO,EAAElB,eAAgB;QAAAa,QAAA,EAAC;MAA+B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAACE,EAAA,GArCQjC,GAAG;AAuCZ,eAAeA,GAAG;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}