{"ast":null,"code":"import { assert } from \"./errors.js\";\n// @TODO: timeout is completely ignored; start a Promise.any with a reject?\nexport function createGetUrl(options) {\n  async function getUrl(req, _signal) {\n    const protocol = req.url.split(\":\")[0].toLowerCase();\n    assert(protocol === \"http\" || protocol === \"https\", `unsupported protocol ${protocol}`, \"UNSUPPORTED_OPERATION\", {\n      info: {\n        protocol\n      },\n      operation: \"request\"\n    });\n    assert(protocol === \"https\" || !req.credentials || req.allowInsecureAuthentication, \"insecure authorized connections unsupported\", \"UNSUPPORTED_OPERATION\", {\n      operation: \"request\"\n    });\n    let signal = undefined;\n    if (_signal) {\n      const controller = new AbortController();\n      signal = controller.signal;\n      _signal.addListener(() => {\n        controller.abort();\n      });\n    }\n    const init = {\n      method: req.method,\n      headers: new Headers(Array.from(req)),\n      body: req.body || undefined,\n      signal\n    };\n    const resp = await fetch(req.url, init);\n    const headers = {};\n    resp.headers.forEach((value, key) => {\n      headers[key.toLowerCase()] = value;\n    });\n    const respBody = await resp.arrayBuffer();\n    const body = respBody == null ? null : new Uint8Array(respBody);\n    return {\n      statusCode: resp.status,\n      statusMessage: resp.statusText,\n      headers,\n      body\n    };\n  }\n  return getUrl;\n}\n// @TODO: remove in v7; provided for backwards compat\nconst defaultGetUrl = createGetUrl({});\nexport async function getUrl(req, _signal) {\n  return defaultGetUrl(req, _signal);\n}","map":{"version":3,"names":["assert","createGetUrl","options","getUrl","req","_signal","protocol","url","split","toLowerCase","info","operation","credentials","allowInsecureAuthentication","signal","undefined","controller","AbortController","addListener","abort","init","method","headers","Headers","Array","from","body","resp","fetch","forEach","value","key","respBody","arrayBuffer","Uint8Array","statusCode","status","statusMessage","statusText","defaultGetUrl"],"sources":["/Users/flo/DeadCaster/ipfs-frontends/onboard/node_modules/ethers/src.ts/utils/geturl-browser.ts"],"sourcesContent":["import { assert } from \"./errors.js\";\n\nimport type {\n    FetchGetUrlFunc, FetchRequest, FetchCancelSignal, GetUrlResponse\n} from \"./fetch.js\";\n\n\ndeclare global {\n    class Headers {\n        constructor(values: Array<[ string, string ]>);\n        forEach(func: (v: string, k: string) => void): void;\n    }\n\n    class Response {\n        status: number;\n        statusText: string;\n        headers: Headers;\n        arrayBuffer(): Promise<ArrayBuffer>;\n    }\n\n    type FetchInit = {\n        method?: string,\n        headers?: Headers,\n        body?: Uint8Array\n    };\n\n    function fetch(url: string, init: FetchInit): Promise<Response>;\n}\n\n// @TODO: timeout is completely ignored; start a Promise.any with a reject?\n\nexport function createGetUrl(options?: Record<string, any>): FetchGetUrlFunc {\n\n    async function getUrl(req: FetchRequest, _signal?: FetchCancelSignal): Promise<GetUrlResponse> {\n        const protocol = req.url.split(\":\")[0].toLowerCase();\n\n        assert(protocol === \"http\" || protocol === \"https\", `unsupported protocol ${ protocol }`, \"UNSUPPORTED_OPERATION\", {\n            info: { protocol },\n            operation: \"request\"\n        });\n\n        assert(protocol === \"https\" || !req.credentials || req.allowInsecureAuthentication, \"insecure authorized connections unsupported\", \"UNSUPPORTED_OPERATION\", {\n            operation: \"request\"\n        });\n\n        let signal: undefined | AbortSignal = undefined;\n        if (_signal) {\n            const controller = new AbortController();\n            signal = controller.signal;\n            _signal.addListener(() => { controller.abort(); });\n        }\n\n        const init = {\n            method: req.method,\n            headers: new Headers(Array.from(req)),\n            body: req.body || undefined,\n            signal\n        };\n\n        const resp = await fetch(req.url, init);\n\n        const headers: Record<string, string> = { };\n        resp.headers.forEach((value, key) => {\n            headers[key.toLowerCase()] = value;\n        });\n\n        const respBody = await resp.arrayBuffer();\n        const body = (respBody == null) ? null: new Uint8Array(respBody);\n\n        return {\n            statusCode: resp.status,\n            statusMessage: resp.statusText,\n            headers, body\n        };\n    }\n\n    return getUrl;\n}\n\n// @TODO: remove in v7; provided for backwards compat\nconst defaultGetUrl: FetchGetUrlFunc = createGetUrl({ });\n\nexport async function getUrl(req: FetchRequest, _signal?: FetchCancelSignal): Promise<GetUrlResponse> {\n    return defaultGetUrl(req, _signal);\n}\n\n"],"mappings":"AAAA,SAASA,MAAM,QAAQ,aAAa;AA6BpC;AAEA,OAAM,SAAUC,YAAYA,CAACC,OAA6B;EAEtD,eAAeC,MAAMA,CAACC,GAAiB,EAAEC,OAA2B;IAChE,MAAMC,QAAQ,GAAGF,GAAG,CAACG,GAAG,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAACC,WAAW,EAAE;IAEpDT,MAAM,CAACM,QAAQ,KAAK,MAAM,IAAIA,QAAQ,KAAK,OAAO,EAAE,wBAAyBA,QAAS,EAAE,EAAE,uBAAuB,EAAE;MAC/GI,IAAI,EAAE;QAAEJ;MAAQ,CAAE;MAClBK,SAAS,EAAE;KACd,CAAC;IAEFX,MAAM,CAACM,QAAQ,KAAK,OAAO,IAAI,CAACF,GAAG,CAACQ,WAAW,IAAIR,GAAG,CAACS,2BAA2B,EAAE,6CAA6C,EAAE,uBAAuB,EAAE;MACxJF,SAAS,EAAE;KACd,CAAC;IAEF,IAAIG,MAAM,GAA4BC,SAAS;IAC/C,IAAIV,OAAO,EAAE;MACT,MAAMW,UAAU,GAAG,IAAIC,eAAe,EAAE;MACxCH,MAAM,GAAGE,UAAU,CAACF,MAAM;MAC1BT,OAAO,CAACa,WAAW,CAAC,MAAK;QAAGF,UAAU,CAACG,KAAK,EAAE;MAAE,CAAC,CAAC;;IAGtD,MAAMC,IAAI,GAAG;MACTC,MAAM,EAAEjB,GAAG,CAACiB,MAAM;MAClBC,OAAO,EAAE,IAAIC,OAAO,CAACC,KAAK,CAACC,IAAI,CAACrB,GAAG,CAAC,CAAC;MACrCsB,IAAI,EAAEtB,GAAG,CAACsB,IAAI,IAAIX,SAAS;MAC3BD;KACH;IAED,MAAMa,IAAI,GAAG,MAAMC,KAAK,CAACxB,GAAG,CAACG,GAAG,EAAEa,IAAI,CAAC;IAEvC,MAAME,OAAO,GAA2B,EAAG;IAC3CK,IAAI,CAACL,OAAO,CAACO,OAAO,CAAC,CAACC,KAAK,EAAEC,GAAG,KAAI;MAChCT,OAAO,CAACS,GAAG,CAACtB,WAAW,EAAE,CAAC,GAAGqB,KAAK;IACtC,CAAC,CAAC;IAEF,MAAME,QAAQ,GAAG,MAAML,IAAI,CAACM,WAAW,EAAE;IACzC,MAAMP,IAAI,GAAIM,QAAQ,IAAI,IAAI,GAAI,IAAI,GAAE,IAAIE,UAAU,CAACF,QAAQ,CAAC;IAEhE,OAAO;MACHG,UAAU,EAAER,IAAI,CAACS,MAAM;MACvBC,aAAa,EAAEV,IAAI,CAACW,UAAU;MAC9BhB,OAAO;MAAEI;KACZ;EACL;EAEA,OAAOvB,MAAM;AACjB;AAEA;AACA,MAAMoC,aAAa,GAAoBtC,YAAY,CAAC,EAAG,CAAC;AAExD,OAAO,eAAeE,MAAMA,CAACC,GAAiB,EAAEC,OAA2B;EACvE,OAAOkC,aAAa,CAACnC,GAAG,EAAEC,OAAO,CAAC;AACtC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}