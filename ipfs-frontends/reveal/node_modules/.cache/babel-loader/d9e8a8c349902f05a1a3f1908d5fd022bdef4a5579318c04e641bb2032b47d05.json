{"ast":null,"code":"var _jsxFileName = \"/Users/flo/DeadCaster/ipfs-frontends/encrypter/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport AES from 'crypto-js/aes';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [text, setText] = useState('');\n  const [secret, setSecret] = useState('');\n  const [encrypted, setEncrypted] = useState('');\n  const encryptText = () => {\n    const ciphertext = AES.encrypt(text, secret).toString();\n    setEncrypted(ciphertext);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"DeadCaster\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: text,\n        onChange: e => setText(e.target.value),\n        placeholder: \"Enter your task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: secret,\n        onChange: e => setSecret(e.target.value),\n        placeholder: \"Enter your secret\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: encryptText,\n        children: \"Encrypt\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        readOnly: true,\n        value: encrypted,\n        onClick: () => navigator.clipboard.writeText(encrypted)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => navigator.clipboard.writeText(encrypted),\n        children: \"Copy Encrypted Text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"/AwN1gBQI5lysH3sU2H86nxaFW4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","AES","jsxDEV","_jsxDEV","App","_s","text","setText","secret","setSecret","encrypted","setEncrypted","encryptText","ciphertext","encrypt","toString","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","readOnly","navigator","clipboard","writeText","_c","$RefreshReg$"],"sources":["/Users/flo/DeadCaster/ipfs-frontends/encrypter/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\nimport AES from 'crypto-js/aes';\n\n\nfunction App() {\n  const [text, setText] = useState('');\n  const [secret, setSecret] = useState('');\n  const [encrypted, setEncrypted] = useState('');\n\n\n  const encryptText = () => {\n    const ciphertext = AES.encrypt(text, secret).toString();\n    setEncrypted(ciphertext);\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>DeadCaster</h1>\n        <input type=\"text\" value={text} onChange={e => setText(e.target.value)} placeholder=\"Enter your task\" />\n        <input type=\"text\" value={secret} onChange={e => setSecret(e.target.value)} placeholder=\"Enter your secret\" />\n        <button onClick={encryptText}>Encrypt</button>\n        <textarea readOnly value={encrypted} onClick={() => navigator.clipboard.writeText(encrypted)} />\n        <button onClick={() => navigator.clipboard.writeText(encrypted)}>Copy Encrypted Text</button>\n      </header>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,WAAW;AAClB,OAAOC,GAAG,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGhC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACQ,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACU,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAG9C,MAAMY,WAAW,GAAGA,CAAA,KAAM;IACxB,MAAMC,UAAU,GAAGZ,GAAG,CAACa,OAAO,CAACR,IAAI,EAAEE,MAAM,CAAC,CAACO,QAAQ,CAAC,CAAC;IACvDJ,YAAY,CAACE,UAAU,CAAC;EAC1B,CAAC;EAED,oBACEV,OAAA;IAAKa,SAAS,EAAC,KAAK;IAAAC,QAAA,eAClBd,OAAA;MAAQa,SAAS,EAAC,YAAY;MAAAC,QAAA,gBAC5Bd,OAAA;QAAAc,QAAA,EAAI;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACnBlB,OAAA;QAAOmB,IAAI,EAAC,MAAM;QAACC,KAAK,EAAEjB,IAAK;QAACkB,QAAQ,EAAEC,CAAC,IAAIlB,OAAO,CAACkB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QAACI,WAAW,EAAC;MAAiB;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACxGlB,OAAA;QAAOmB,IAAI,EAAC,MAAM;QAACC,KAAK,EAAEf,MAAO;QAACgB,QAAQ,EAAEC,CAAC,IAAIhB,SAAS,CAACgB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QAACI,WAAW,EAAC;MAAmB;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC9GlB,OAAA;QAAQyB,OAAO,EAAEhB,WAAY;QAAAK,QAAA,EAAC;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC9ClB,OAAA;QAAU0B,QAAQ;QAACN,KAAK,EAAEb,SAAU;QAACkB,OAAO,EAAEA,CAAA,KAAME,SAAS,CAACC,SAAS,CAACC,SAAS,CAACtB,SAAS;MAAE;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAChGlB,OAAA;QAAQyB,OAAO,EAAEA,CAAA,KAAME,SAAS,CAACC,SAAS,CAACC,SAAS,CAACtB,SAAS,CAAE;QAAAO,QAAA,EAAC;MAAmB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvF;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAAChB,EAAA,CAvBQD,GAAG;AAAA6B,EAAA,GAAH7B,GAAG;AAyBZ,eAAeA,GAAG;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}